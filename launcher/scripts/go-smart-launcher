#!/usr/bin/python3

# This file is part of the Go-Smart Simulation Architecture (GSSA).
# Go-Smart is an EU-FP7 project, funded by the European Commission.
#
# Copyright (C) 2013-  NUMA Engineering Ltd. (see AUTHORS file)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import os
import traceback

from gosmart.launcher import gosmart
from gosmart.launcher import utils


def main():
    args = utils.parse_args()

    error_location = 'error_message'
    if args.global_working_directory:
        error_location = os.path.join(args.global_working_directory, error_location)
    try:
        os.remove(error_location)
    except OSError:
        pass

    try:
        wrapper = gosmart.GoSmart(args=args, global_working_directory=args.global_working_directory)
    except Exception as e:
        with open('error_message', 'w') as f:
            f.write("INIT-ERROR (%s): %s" % (type(e).__name__, str(e)))
        traceback.print_exc()
        return -1

    wrapper.print_header()

    try:
        wrapper.launch(default_procs=1)
    except Exception as e:
        with open('error_message', 'w') as f:
            f.write("EXEC-ERROR (%s): %s" % (type(e).__name__, str(e)))
        traceback.print_exc()
        return -1

    return 0


if __name__ == "__main__":
    sys.exit(main())
